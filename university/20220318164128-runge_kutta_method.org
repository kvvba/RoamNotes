:PROPERTIES:
:ID:       a476d1c7-c504-46f0-b590-f1d9bb1c7d85
:END:
#+title: Runge-Kutta method

* Background
Runge-Kutta method is an improved [[id:b1d6e8fe-ce6a-431e-96bd-6a70ec809625][Explicit scheme]] method.

Take for example explicit difference equation for diffusion:

T_i^(n+1) = T_i^n + (\Delta t)/((\Delta x)^2) \cdot (T_(i+1)^n - 2T_i^n + T_(i-1)^n)
The residual, R, of this equation is (\Delta t)/((\Delta x)^2) \cdot (T_(i+1)^n - 2T_i^n + T_(i-1)^n)
When a steady flow calculation has converged to a steady state, the residual term will be close to zero. The residual is calculated at the known time level.

Re-write as T^(n+1) = T^n + R^n
Note that we used a first-order accurate finite difference for (\partial T)/(\partial t). Hence the overall accuracy of the method is first order.
Higher order explicit approaches have been developed, including the popular Runge-Kutta explicit scheme.
These also have improved stability constraints, i.e. larger timesteps can be used.

* Fourth order accurate Runge-Kutta method
There are 4 stages at each iteration.
** Stage 1
T^1 = T^n + ((\Delta t)/2)R^n
** Stage 2
T^2 = T^n + ((\Delta t)/2)R^1
** Stage 3
T^3 = T^n + ((\Delta t)/2)R^2
** Stage 4
T^(n+1) = T^n + ((\Delta t)/6) \cdot (R^n + 2R^1 + 2R^2 + R^3)

* CFD codes which use the Runge-Kutta method
- ANSYS Fluent
- Rolls-Royce HYDRA
- German Aerospace Centre (DLR)/Airbus 'TAU' code
- Star-CCM+
